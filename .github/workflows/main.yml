name: main

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

jobs:
  main:
    environment: base
    env:
      CONTAINER_NAME: time_exporter
      CONTAINER_TIMEOUT_SEC: 5
      SECRET_DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
      DOCKER_IMAGE: time-exporter
      RUN_PORT: 9818
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Go 1.12
        uses: actions/setup-go@v1
        with:
          go-version: 1.16

      - name: Set envs
        run: |
          echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV
          echo "DOCKER_REPO=$(if [[ "$SECRET_DOCKERHUB_REPO" == "" ]]; then if [[ "$SECRET_DOCKERHUB_USER" == "" ]]; then echo "testbuild"; else echo "$SECRET_DOCKERHUB_USER"; fi; else echo "$SECRET_DOCKERHUB_REPO"; fi)" >> $GITHUB_ENV
          echo GOPATH=$HOME/go >> $GITHUB_ENV
          echo GOBIN=$(go env GOPATH)/bin >> $GITHUB_ENV
          echo PATH=$PATH:$GOPATH >> $GITHUB_ENV
          echo PATH=$PATH:$GOBIN >> $GITHUB_ENV

      - name: Run test build
        run: |
          make build
          $GOBIN/promu --config .promu.yml build --prefix .build/linux-amd64

      - name: Docker build
        run: docker build -t $DOCKER_REPO/$DOCKER_IMAGE:$VERSION . -f ./Dockerfile

      - name: Start docker container
        run: docker run -d --name $CONTAINER_NAME -p $RUN_PORT:$RUN_PORT $DOCKER_REPO/$DOCKER_IMAGE:$VERSION

      - name: Check container is still running
        run: |
          echo "RUN_TEST_RESULT=$(sleep $CONTAINER_TIMEOUT_SEC && if [[ $(docker inspect -f "{{.State.Running}}" $CONTAINER_NAME 2> /dev/null) == true ]]; then echo OK; else echo FAIL; fi)"  >> $GITHUB_ENV
      - name: Check api is available by HTTP (response code is 200)
        run: |
          echo "API_TEST_RESULT=$(if [[ $(curl -LIs localhost:$RUN_PORT -o /dev/null -w '%{http_code}') == 200 ]]; then echo OK; else echo FAIL; fi)" >> $GITHUB_ENV
      - name: Print test results
        run: |
          echo $RUN_TEST_RESULT
          echo $API_TEST_RESULT
      - name: Tests fail
        run: docker logs $CONTAINER_NAME && exit 1
        if: env.RUN_TEST_RESULT == 'FAIL' || env.API_TEST_RESULT == 'FAIL'

#      - name: Run promu build && crossbuild
#        run: |
#          $GOBIN/promu crossbuild
#          $GOBIN/promu crossbuild tarballs

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ env.VERSION }}
          prerelease: false
          title: "Release {{ env.VERSION }}"
          files: |
            .tarballs/*.tar.gz
        if: github.ref == 'refs/heads/master'

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: github.ref == 'refs/heads/master'

      - name: Docker push versioned image
        run: docker push $DOCKER_REPO/$DOCKER_IMAGE:$VERSION
        if: github.ref == 'refs/heads/master'

      - name: Docker push latest image
        run: |
          docker tag $DOCKER_REPO/$DOCKER_IMAGE:$VERSION $DOCKER_REPO/$DOCKER_IMAGE:latest
          docker push $DOCKER_REPO/$DOCKER_IMAGE:latest
        if: github.ref == 'refs/heads/master'